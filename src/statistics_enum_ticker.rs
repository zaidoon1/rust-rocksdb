// **** DO NOT modify this file! ****
// This file is generated by cmd:
//   gen_statistics.bash rocksdb/monitoring/statistics.cc Ticker
iterable_named_enum! {
    #[derive(Debug, Copy, Clone, PartialEq, Eq)]
    #[repr(u32)]
    pub enum Ticker {
        BlockCacheMiss("rocksdb.block.cache.miss"),
        BlockCacheHit("rocksdb.block.cache.hit"),
        BlockCacheAdd("rocksdb.block.cache.add"),
        BlockCacheAddFailures("rocksdb.block.cache.add.failures"),
        BlockCacheIndexMiss("rocksdb.block.cache.index.miss"),
        BlockCacheIndexHit("rocksdb.block.cache.index.hit"),
        BlockCacheIndexAdd("rocksdb.block.cache.index.add"),
        BlockCacheIndexBytesInsert("rocksdb.block.cache.index.bytes.insert"),
        BlockCacheFilterMiss("rocksdb.block.cache.filter.miss"),
        BlockCacheFilterHit("rocksdb.block.cache.filter.hit"),
        BlockCacheFilterAdd("rocksdb.block.cache.filter.add"),
        BlockCacheFilterBytesInsert("rocksdb.block.cache.filter.bytes.insert"),
        BlockCacheDataMiss("rocksdb.block.cache.data.miss"),
        BlockCacheDataHit("rocksdb.block.cache.data.hit"),
        BlockCacheDataAdd("rocksdb.block.cache.data.add"),
        BlockCacheDataBytesInsert("rocksdb.block.cache.data.bytes.insert"),
        BlockCacheBytesRead("rocksdb.block.cache.bytes.read"),
        BlockCacheBytesWrite("rocksdb.block.cache.bytes.write"),
        BlockCacheCompressionDictMiss("rocksdb.block.cache.compression.dict.miss"),
        BlockCacheCompressionDictHit("rocksdb.block.cache.compression.dict.hit"),
        BlockCacheCompressionDictAdd("rocksdb.block.cache.compression.dict.add"),
        BlockCacheCompressionDictBytesInsert("rocksdb.block.cache.compression.dict.bytes.insert"),
        BlockCacheAddRedundant("rocksdb.block.cache.add.redundant"),
        BlockCacheIndexAddRedundant("rocksdb.block.cache.index.add.redundant"),
        BlockCacheFilterAddRedundant("rocksdb.block.cache.filter.add.redundant"),
        BlockCacheDataAddRedundant("rocksdb.block.cache.data.add.redundant"),
        BlockCacheCompressionDictAddRedundant("rocksdb.block.cache.compression.dict.add.redundant"),
        SecondaryCacheHits("rocksdb.secondary.cache.hits"),
        SecondaryCacheFilterHits("rocksdb.secondary.cache.filter.hits"),
        SecondaryCacheIndexHits("rocksdb.secondary.cache.index.hits"),
        SecondaryCacheDataHits("rocksdb.secondary.cache.data.hits"),
        CompressedSecondaryCacheDummyHits("rocksdb.compressed.secondary.cache.dummy.hits"),
        CompressedSecondaryCacheHits("rocksdb.compressed.secondary.cache.hits"),
        CompressedSecondaryCachePromotions("rocksdb.compressed.secondary.cache.promotions"),
        CompressedSecondaryCachePromotionSkips("rocksdb.compressed.secondary.cache.promotion.skips"),
        BloomFilterUseful("rocksdb.bloom.filter.useful"),
        BloomFilterFullPositive("rocksdb.bloom.filter.full.positive"),
        BloomFilterFullTruePositive("rocksdb.bloom.filter.full.true.positive"),
        BloomFilterPrefixChecked("rocksdb.bloom.filter.prefix.checked"),
        BloomFilterPrefixUseful("rocksdb.bloom.filter.prefix.useful"),
        BloomFilterPrefixTruePositive("rocksdb.bloom.filter.prefix.true.positive"),
        PersistentCacheHit("rocksdb.persistent.cache.hit"),
        PersistentCacheMiss("rocksdb.persistent.cache.miss"),
        SimBlockCacheHit("rocksdb.sim.block.cache.hit"),
        SimBlockCacheMiss("rocksdb.sim.block.cache.miss"),
        MemtableHit("rocksdb.memtable.hit"),
        MemtableMiss("rocksdb.memtable.miss"),
        GetHitL0("rocksdb.l0.hit"),
        GetHitL1("rocksdb.l1.hit"),
        GetHitL2AndUp("rocksdb.l2andup.hit"),
        CompactionKeyDropNewerEntry("rocksdb.compaction.key.drop.new"),
        CompactionKeyDropObsolete("rocksdb.compaction.key.drop.obsolete"),
        CompactionKeyDropRangeDel("rocksdb.compaction.key.drop.range_del"),
        CompactionKeyDropUser("rocksdb.compaction.key.drop.user"),
        CompactionRangeDelDropObsolete("rocksdb.compaction.range_del.drop.obsolete"),
        CompactionOptimizedDelDropObsolete("rocksdb.compaction.optimized.del.drop.obsolete"),
        CompactionCancelled("rocksdb.compaction.cancelled"),
        NumberKeysWritten("rocksdb.number.keys.written"),
        NumberKeysRead("rocksdb.number.keys.read"),
        NumberKeysUpdated("rocksdb.number.keys.updated"),
        BytesWritten("rocksdb.bytes.written"),
        BytesRead("rocksdb.bytes.read"),
        NumberDbSeek("rocksdb.number.db.seek"),
        NumberDbNext("rocksdb.number.db.next"),
        NumberDbPrev("rocksdb.number.db.prev"),
        NumberDbSeekFound("rocksdb.number.db.seek.found"),
        NumberDbNextFound("rocksdb.number.db.next.found"),
        NumberDbPrevFound("rocksdb.number.db.prev.found"),
        IterBytesRead("rocksdb.db.iter.bytes.read"),
        NumberIterSkip("rocksdb.number.iter.skip"),
        NumberOfReseeksInIteration("rocksdb.number.reseeks.iteration"),
        NoIteratorCreated("rocksdb.num.iterator.created"),
        NoIteratorDeleted("rocksdb.num.iterator.deleted"),
        NoFileOpens("rocksdb.no.file.opens"),
        NoFileErrors("rocksdb.no.file.errors"),
        StallMicros("rocksdb.stall.micros"),
        DbMutexWaitMicros("rocksdb.db.mutex.wait.micros"),
        NumberMultigetCalls("rocksdb.number.multiget.get"),
        NumberMultigetKeysRead("rocksdb.number.multiget.keys.read"),
        NumberMultigetBytesRead("rocksdb.number.multiget.bytes.read"),
        NumberMultigetKeysFound("rocksdb.number.multiget.keys.found"),
        NumberMergeFailures("rocksdb.number.merge.failures"),
        GetUpdatesSinceCalls("rocksdb.getupdatessince.calls"),
        WalFileSynced("rocksdb.wal.synced"),
        WalFileBytes("rocksdb.wal.bytes"),
        WriteDoneBySelf("rocksdb.write.self"),
        WriteDoneByOther("rocksdb.write.other"),
        WriteWithWal("rocksdb.write.wal"),
        CompactReadBytes("rocksdb.compact.read.bytes"),
        CompactWriteBytes("rocksdb.compact.write.bytes"),
        FlushWriteBytes("rocksdb.flush.write.bytes"),
        CompactReadBytesMarked("rocksdb.compact.read.marked.bytes"),
        CompactReadBytesPeriodic("rocksdb.compact.read.periodic.bytes"),
        CompactReadBytesTtl("rocksdb.compact.read.ttl.bytes"),
        CompactWriteBytesMarked("rocksdb.compact.write.marked.bytes"),
        CompactWriteBytesPeriodic("rocksdb.compact.write.periodic.bytes"),
        CompactWriteBytesTtl("rocksdb.compact.write.ttl.bytes"),
        NumberDirectLoadTableProperties("rocksdb.number.direct.load.table.properties"),
        NumberSuperversionAcquires("rocksdb.number.superversion_acquires"),
        NumberSuperversionReleases("rocksdb.number.superversion_releases"),
        NumberSuperversionCleanups("rocksdb.number.superversion_cleanups"),
        NumberBlockCompressed("rocksdb.number.block.compressed"),
        NumberBlockDecompressed("rocksdb.number.block.decompressed"),
        BytesCompressedFrom("rocksdb.bytes.compressed.from"),
        BytesCompressedTo("rocksdb.bytes.compressed.to"),
        BytesCompressionBypassed("rocksdb.bytes.compression_bypassed"),
        BytesCompressionRejected("rocksdb.bytes.compression.rejected"),
        NumberBlockCompressionBypassed("rocksdb.number.block_compression_bypassed"),
        NumberBlockCompressionRejected("rocksdb.number.block_compression_rejected"),
        BytesDecompressedFrom("rocksdb.bytes.decompressed.from"),
        BytesDecompressedTo("rocksdb.bytes.decompressed.to"),
        MergeOperationTotalTime("rocksdb.merge.operation.time.nanos"),
        FilterOperationTotalTime("rocksdb.filter.operation.time.nanos"),
        CompactionCpuTotalTime("rocksdb.compaction.total.time.cpu_micros"),
        RowCacheHit("rocksdb.row.cache.hit"),
        RowCacheMiss("rocksdb.row.cache.miss"),
        ReadAmpEstimateUsefulBytes("rocksdb.read.amp.estimate.useful.bytes"),
        ReadAmpTotalReadBytes("rocksdb.read.amp.total.read.bytes"),
        NumberRateLimiterDrains("rocksdb.number.rate_limiter.drains"),
        BlobDbNumPut("rocksdb.blobdb.num.put"),
        BlobDbNumWrite("rocksdb.blobdb.num.write"),
        BlobDbNumGet("rocksdb.blobdb.num.get"),
        BlobDbNumMultiget("rocksdb.blobdb.num.multiget"),
        BlobDbNumSeek("rocksdb.blobdb.num.seek"),
        BlobDbNumNext("rocksdb.blobdb.num.next"),
        BlobDbNumPrev("rocksdb.blobdb.num.prev"),
        BlobDbNumKeysWritten("rocksdb.blobdb.num.keys.written"),
        BlobDbNumKeysRead("rocksdb.blobdb.num.keys.read"),
        BlobDbBytesWritten("rocksdb.blobdb.bytes.written"),
        BlobDbBytesRead("rocksdb.blobdb.bytes.read"),
        BlobDbWriteInlined("rocksdb.blobdb.write.inlined"),
        BlobDbWriteInlinedTtl("rocksdb.blobdb.write.inlined.ttl"),
        BlobDbWriteBlob("rocksdb.blobdb.write.blob"),
        BlobDbWriteBlobTtl("rocksdb.blobdb.write.blob.ttl"),
        BlobDbBlobFileBytesWritten("rocksdb.blobdb.blob.file.bytes.written"),
        BlobDbBlobFileBytesRead("rocksdb.blobdb.blob.file.bytes.read"),
        BlobDbBlobFileSynced("rocksdb.blobdb.blob.file.synced"),
        BlobDbBlobIndexExpiredCount("rocksdb.blobdb.blob.index.expired.count"),
        BlobDbBlobIndexExpiredSize("rocksdb.blobdb.blob.index.expired.size"),
        BlobDbBlobIndexEvictedCount("rocksdb.blobdb.blob.index.evicted.count"),
        BlobDbBlobIndexEvictedSize("rocksdb.blobdb.blob.index.evicted.size"),
        BlobDbGcNumFiles("rocksdb.blobdb.gc.num.files"),
        BlobDbGcNumNewFiles("rocksdb.blobdb.gc.num.new.files"),
        BlobDbGcFailures("rocksdb.blobdb.gc.failures"),
        BlobDbGcNumKeysRelocated("rocksdb.blobdb.gc.num.keys.relocated"),
        BlobDbGcBytesRelocated("rocksdb.blobdb.gc.bytes.relocated"),
        BlobDbFifoNumFilesEvicted("rocksdb.blobdb.fifo.num.files.evicted"),
        BlobDbFifoNumKeysEvicted("rocksdb.blobdb.fifo.num.keys.evicted"),
        BlobDbFifoBytesEvicted("rocksdb.blobdb.fifo.bytes.evicted"),
        BlobDbCacheMiss("rocksdb.blobdb.cache.miss"),
        BlobDbCacheHit("rocksdb.blobdb.cache.hit"),
        BlobDbCacheAdd("rocksdb.blobdb.cache.add"),
        BlobDbCacheAddFailures("rocksdb.blobdb.cache.add.failures"),
        BlobDbCacheBytesRead("rocksdb.blobdb.cache.bytes.read"),
        BlobDbCacheBytesWrite("rocksdb.blobdb.cache.bytes.write"),
        TxnPrepareMutexOverhead("rocksdb.txn.overhead.mutex.prepare"),
        TxnOldCommitMapMutexOverhead("rocksdb.txn.overhead.mutex.old.commit.map"),
        TxnDuplicateKeyOverhead("rocksdb.txn.overhead.duplicate.key"),
        TxnSnapshotMutexOverhead("rocksdb.txn.overhead.mutex.snapshot"),
        TxnGetTryAgain("rocksdb.txn.get.tryagain"),
        FilesMarkedTrash("rocksdb.files.marked.trash"),
        FilesDeletedFromTrashQueue("rocksdb.files.marked.trash.deleted"),
        FilesDeletedImmediately("rocksdb.files.deleted.immediately"),
        ErrorHandlerBgErrorCount("rocksdb.error.handler.bg.error.count"),
        ErrorHandlerBgIoErrorCount("rocksdb.error.handler.bg.io.error.count"),
        ErrorHandlerBgRetryableIoErrorCount("rocksdb.error.handler.bg.retryable.io.error.count"),
        ErrorHandlerAutoresumeCount("rocksdb.error.handler.autoresume.count"),
        ErrorHandlerAutoresumeRetryTotalCount("rocksdb.error.handler.autoresume.retry.total.count"),
        ErrorHandlerAutoresumeSuccessCount("rocksdb.error.handler.autoresume.success.count"),
        MemtablePayloadBytesAtFlush("rocksdb.memtable.payload.bytes.at.flush"),
        MemtableGarbageBytesAtFlush("rocksdb.memtable.garbage.bytes.at.flush"),
        VerifyChecksumReadBytes("rocksdb.verify_checksum.read.bytes"),
        BackupReadBytes("rocksdb.backup.read.bytes"),
        BackupWriteBytes("rocksdb.backup.write.bytes"),
        RemoteCompactReadBytes("rocksdb.remote.compact.read.bytes"),
        RemoteCompactWriteBytes("rocksdb.remote.compact.write.bytes"),
        HotFileReadBytes("rocksdb.hot.file.read.bytes"),
        WarmFileReadBytes("rocksdb.warm.file.read.bytes"),
        ColdFileReadBytes("rocksdb.cold.file.read.bytes"),
        HotFileReadCount("rocksdb.hot.file.read.count"),
        WarmFileReadCount("rocksdb.warm.file.read.count"),
        ColdFileReadCount("rocksdb.cold.file.read.count"),
        LastLevelReadBytes("rocksdb.last.level.read.bytes"),
        LastLevelReadCount("rocksdb.last.level.read.count"),
        NonLastLevelReadBytes("rocksdb.non.last.level.read.bytes"),
        NonLastLevelReadCount("rocksdb.non.last.level.read.count"),
        LastLevelSeekFiltered("rocksdb.last.level.seek.filtered"),
        LastLevelSeekFilterMatch("rocksdb.last.level.seek.filter.match"),
        LastLevelSeekData("rocksdb.last.level.seek.data"),
        LastLevelSeekDataUsefulNoFilter("rocksdb.last.level.seek.data.useful.no.filter"),
        LastLevelSeekDataUsefulFilterMatch("rocksdb.last.level.seek.data.useful.filter.match"),
        NonLastLevelSeekFiltered("rocksdb.non.last.level.seek.filtered"),
        NonLastLevelSeekFilterMatch("rocksdb.non.last.level.seek.filter.match"),
        NonLastLevelSeekData("rocksdb.non.last.level.seek.data"),
        NonLastLevelSeekDataUsefulNoFilter("rocksdb.non.last.level.seek.data.useful.no.filter"),
        NonLastLevelSeekDataUsefulFilterMatch("rocksdb.non.last.level.seek.data.useful.filter.match"),
        BlockChecksumComputeCount("rocksdb.block.checksum.compute.count"),
        BlockChecksumMismatchCount("rocksdb.block.checksum.mismatch.count"),
        MultigetCoroutineCount("rocksdb.multiget.coroutine.count"),
        ReadAsyncMicros("rocksdb.read.async.micros"),
        AsyncReadErrorCount("rocksdb.async.read.error.count"),
        TableOpenPrefetchTailMiss("rocksdb.table.open.prefetch.tail.miss"),
        TableOpenPrefetchTailHit("rocksdb.table.open.prefetch.tail.hit"),
        TimestampFilterTableChecked("rocksdb.timestamp.filter.table.checked"),
        TimestampFilterTableFiltered("rocksdb.timestamp.filter.table.filtered"),
        ReadaheadTrimmed("rocksdb.readahead.trimmed"),
        FifoMaxSizeCompactions("rocksdb.fifo.max.size.compactions"),
        FifoTtlCompactions("rocksdb.fifo.ttl.compactions"),
        FifoChangeTemperatureCompactions("rocksdb.fifo.change_temperature.compactions"),
        PrefetchBytes("rocksdb.prefetch.bytes"),
        PrefetchBytesUseful("rocksdb.prefetch.bytes.useful"),
        PrefetchHits("rocksdb.prefetch.hits"),
        SstFooterCorruptionCount("rocksdb.footer.corruption.count"),
        FileReadCorruptionRetryCount("rocksdb.file.read.corruption.retry.count"),
        FileReadCorruptionRetrySuccessCount("rocksdb.file.read.corruption.retry.success.count"),
        NumberWbwiIngest("rocksdb.number.wbwi.ingest"),
    }
}
