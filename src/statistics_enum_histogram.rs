// **** DO NOT modify this file! ****
// This file is generated by cmd:
//   gen_statistics.bash rocksdb/monitoring/statistics.cc Histogram
iterable_named_enum! {
    #[derive(Debug, Copy, Clone, PartialEq, Eq)]
    #[repr(u32)]
    pub enum Histogram {
        DbGet("rocksdb.db.get.micros"),
        DbWrite("rocksdb.db.write.micros"),
        CompactionTime("rocksdb.compaction.times.micros"),
        CompactionCpuTime("rocksdb.compaction.times.cpu_micros"),
        SubcompactionSetupTime("rocksdb.subcompaction.setup.times.micros"),
        TableSyncMicros("rocksdb.table.sync.micros"),
        CompactionOutfileSyncMicros("rocksdb.compaction.outfile.sync.micros"),
        WalFileSyncMicros("rocksdb.wal.file.sync.micros"),
        ManifestFileSyncMicros("rocksdb.manifest.file.sync.micros"),
        TableOpenIoMicros("rocksdb.table.open.io.micros"),
        DbMultiget("rocksdb.db.multiget.micros"),
        ReadBlockCompactionMicros("rocksdb.read.block.compaction.micros"),
        ReadBlockGetMicros("rocksdb.read.block.get.micros"),
        WriteRawBlockMicros("rocksdb.write.raw.block.micros"),
        NumFilesInSingleCompaction("rocksdb.numfiles.in.singlecompaction"),
        DbSeek("rocksdb.db.seek.micros"),
        WriteStall("rocksdb.db.write.stall"),
        SstReadMicros("rocksdb.sst.read.micros"),
        FileReadFlushMicros("rocksdb.file.read.flush.micros"),
        FileReadCompactionMicros("rocksdb.file.read.compaction.micros"),
        FileReadDbOpenMicros("rocksdb.file.read.db.open.micros"),
        FileReadGetMicros("rocksdb.file.read.get.micros"),
        FileReadMultigetMicros("rocksdb.file.read.multiget.micros"),
        FileReadDbIteratorMicros("rocksdb.file.read.db.iterator.micros"),
        FileReadVerifyDbChecksumMicros("rocksdb.file.read.verify.db.checksum.micros"),
        FileReadVerifyFileChecksumsMicros("rocksdb.file.read.verify.file.checksums.micros"),
        SstWriteMicros("rocksdb.sst.write.micros"),
        FileWriteFlushMicros("rocksdb.file.write.flush.micros"),
        FileWriteCompactionMicros("rocksdb.file.write.compaction.micros"),
        FileWriteDbOpenMicros("rocksdb.file.write.db.open.micros"),
        NumSubcompactionsScheduled("rocksdb.num.subcompactions.scheduled"),
        BytesPerRead("rocksdb.bytes.per.read"),
        BytesPerWrite("rocksdb.bytes.per.write"),
        BytesPerMultiget("rocksdb.bytes.per.multiget"),
        CompressionTimesNanos("rocksdb.compression.times.nanos"),
        DecompressionTimesNanos("rocksdb.decompression.times.nanos"),
        ReadNumMergeOperands("rocksdb.read.num.merge_operands"),
        BlobDbKeySize("rocksdb.blobdb.key.size"),
        BlobDbValueSize("rocksdb.blobdb.value.size"),
        BlobDbWriteMicros("rocksdb.blobdb.write.micros"),
        BlobDbGetMicros("rocksdb.blobdb.get.micros"),
        BlobDbMultigetMicros("rocksdb.blobdb.multiget.micros"),
        BlobDbSeekMicros("rocksdb.blobdb.seek.micros"),
        BlobDbNextMicros("rocksdb.blobdb.next.micros"),
        BlobDbPrevMicros("rocksdb.blobdb.prev.micros"),
        BlobDbBlobFileWriteMicros("rocksdb.blobdb.blob.file.write.micros"),
        BlobDbBlobFileReadMicros("rocksdb.blobdb.blob.file.read.micros"),
        BlobDbBlobFileSyncMicros("rocksdb.blobdb.blob.file.sync.micros"),
        BlobDbCompressionMicros("rocksdb.blobdb.compression.micros"),
        BlobDbDecompressionMicros("rocksdb.blobdb.decompression.micros"),
        FlushTime("rocksdb.db.flush.micros"),
        SstBatchSize("rocksdb.sst.batch.size"),
        MultigetIoBatchSize("rocksdb.multiget.io.batch.size"),
        NumIndexAndFilterBlocksReadPerLevel("rocksdb.num.index.and.filter.blocks.read.per.level"),
        NumSstReadPerLevel("rocksdb.num.sst.read.per.level"),
        NumLevelReadPerMultiget("rocksdb.num.level.read.per.multiget"),
        ErrorHandlerAutoresumeRetryCount("rocksdb.error.handler.autoresume.retry.count"),
        AsyncReadBytes("rocksdb.async.read.bytes"),
        PollWaitMicros("rocksdb.poll.wait.micros"),
        CompactionPrefetchBytes("rocksdb.compaction.prefetch.bytes"),
        PrefetchedBytesDiscarded("rocksdb.prefetched.bytes.discarded"),
        AsyncPrefetchAbortMicros("rocksdb.async.prefetch.abort.micros"),
        TableOpenPrefetchTailReadBytes("rocksdb.table.open.prefetch.tail.read.bytes"),
        NumOpPerTransaction("rocksdb.num.op.per.transaction"),
    }
}
